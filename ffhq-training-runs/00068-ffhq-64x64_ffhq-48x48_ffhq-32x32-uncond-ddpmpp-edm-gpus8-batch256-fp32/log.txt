Loading datasets...
Constructing network...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Traceback (most recent call last):
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/train.py", line 240, in <module>
    main()
  File "/mnt/nvme/home/kevinrojas1499/anaconda3/envs/edm/lib/python3.9/site-packages/click/core.py", line 1128, in __call__
    return self.main(*args, **kwargs)
  File "/mnt/nvme/home/kevinrojas1499/anaconda3/envs/edm/lib/python3.9/site-packages/click/core.py", line 1053, in main
    rv = self.invoke(ctx)
  File "/mnt/nvme/home/kevinrojas1499/anaconda3/envs/edm/lib/python3.9/site-packages/click/core.py", line 1395, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/mnt/nvme/home/kevinrojas1499/anaconda3/envs/edm/lib/python3.9/site-packages/click/core.py", line 754, in invoke
    return __callback(*args, **kwargs)
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/train.py", line 235, in main
    training_loop.training_loop(**c)
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/training/training_loop.py", line 89, in training_loop
    misc.print_module_summary(net, [images, sigma, labels], max_nesting=2)
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/torch_utils/misc.py", line 216, in print_module_summary
    outputs = module(*inputs)
  File "/mnt/nvme/home/kevinrojas1499/anaconda3/envs/edm/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1148, in _call_impl
    result = forward_call(*input, **kwargs)
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/training/networks.py", line 594, in forward
    F_x = self.model((c_in * x).to(dtype), c_noise.flatten(), class_labels=class_labels, **model_kwargs)
  File "/mnt/nvme/home/kevinrojas1499/anaconda3/envs/edm/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1148, in _call_impl
    result = forward_call(*input, **kwargs)
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/training/networks.py", line 531, in forward
    x = block(x, emb) if isinstance(block, DualUNetBlock) else block(x)
  File "/mnt/nvme/home/kevinrojas1499/anaconda3/envs/edm/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1148, in _call_impl
    result = forward_call(*input, **kwargs)
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/training/networks.py", line 232, in forward
    spectral_out = self.spectral_conv(x, out_h=out_h, out_w=out_w) if self.use_spectral else 0
  File "/mnt/nvme/home/kevinrojas1499/anaconda3/envs/edm/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1148, in _call_impl
    result = forward_call(*input, **kwargs)
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/training/networks.py", line 176, in forward
    dim1, dim2 = x_ft.shape[2:3]
ValueError: not enough values to unpack (expected 2, got 1)
