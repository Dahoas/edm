Loading datasets...
Constructing network...
Initializing fourier layer...
Traceback (most recent call last):
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/train.py", line 240, in <module>
    main()
  File "/mnt/nvme/home/kevinrojas1499/anaconda3/envs/edm/lib/python3.9/site-packages/click/core.py", line 1128, in __call__
    return self.main(*args, **kwargs)
  File "/mnt/nvme/home/kevinrojas1499/anaconda3/envs/edm/lib/python3.9/site-packages/click/core.py", line 1053, in main
    rv = self.invoke(ctx)
  File "/mnt/nvme/home/kevinrojas1499/anaconda3/envs/edm/lib/python3.9/site-packages/click/core.py", line 1395, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/mnt/nvme/home/kevinrojas1499/anaconda3/envs/edm/lib/python3.9/site-packages/click/core.py", line 754, in invoke
    return __callback(*args, **kwargs)
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/train.py", line 235, in main
    training_loop.training_loop(**c)
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/training/training_loop.py", line 82, in training_loop
    net = dnnlib.util.construct_class_by_name(**network_kwargs, **interface_kwargs) # subclass of torch.nn.Module
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/dnnlib/util.py", line 302, in construct_class_by_name
    return call_func_by_name(*args, func_name=class_name, **kwargs)
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/dnnlib/util.py", line 297, in call_func_by_name
    return func_obj(*args, **kwargs)
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/torch_utils/persistence.py", line 106, in __init__
    super().__init__(*args, **kwargs)
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/training/networks.py", line 581, in __init__
    self.model = globals()[model_type](in_channels=img_channels, out_channels=img_channels, label_dim=label_dim, **model_kwargs)
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/torch_utils/persistence.py", line 106, in __init__
    super().__init__(*args, **kwargs)
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/training/networks.py", line 469, in __init__
    self.enc[f'{level}_block{idx}'] = DualUNetBlock(in_channels=cin, out_channels=cout, attention=attn, modes1=modes1, modes2=modes2, **block_kwargs)
  File "/mnt/nvme/home/kevinrojas1499/repos/edm/torch_utils/persistence.py", line 106, in __init__
    super().__init__(*args, **kwargs)
TypeError: __init__() missing 1 required positional argument: 'max_fourier_modes'
