Loading dataset...
Constructing network...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...
Initializing fourier layer...

EDMPrecond            Parameters  Buffers  Output shape         Datatype
---                   ---         ---      ---                  ---     
model.map_noise       -           -        [16, 128]            float32 
model.map_layer0      66048       -        [16, 512]            float32 
model.map_layer1      262656      -        [16, 512]            float32 
model.enc.0_conv      58880       -        [16, 128, 256, 256]  float32 
model.enc.0_block0    5079936     -        [16, 128, 256, 256]  float32 
model.enc.0_block1    5079936     -        [16, 128, 256, 256]  float32 
model.enc.0_block2    5079936     -        [16, 128, 256, 256]  float32 
model.enc.0_block3    5079936     -        [16, 128, 256, 256]  float32 
model.enc.1_down      1688576     8        [16, 128, 128, 128]  float32 
model.enc.1_block0    4982528     -        [16, 256, 128, 128]  float32 
model.enc.1_block1    6555392     -        [16, 256, 128, 128]  float32 
model.enc.1_block2    6555392     -        [16, 256, 128, 128]  float32 
model.enc.1_block3    6555392     -        [16, 256, 128, 128]  float32 
model.enc.2_down      6621184     8        [16, 256, 64, 64]    float32 
model.enc.2_block0    6819072     -        [16, 256, 64, 64]    float32 
model.enc.2_block1    6819072     -        [16, 256, 64, 64]    float32 
model.enc.2_block2    6819072     -        [16, 256, 64, 64]    float32 
model.enc.2_block3    6819072     -        [16, 256, 64, 64]    float32 
model.enc.3_down      1378304     8        [16, 256, 32, 32]    float32 
model.enc.3_block0    1312512     -        [16, 256, 32, 32]    float32 
model.enc.3_block1    1312512     -        [16, 256, 32, 32]    float32 
model.enc.3_block2    1312512     -        [16, 256, 32, 32]    float32 
model.enc.3_block3    1312512     -        [16, 256, 32, 32]    float32 
model.dec.3_in0       1576192     -        [16, 256, 32, 32]    float32 
model.dec.3_in1       1312512     -        [16, 256, 32, 32]    float32 
model.dec.3_block0    2034176     -        [16, 256, 32, 32]    float32 
model.dec.3_block1    2034176     -        [16, 256, 32, 32]    float32 
model.dec.3_block2    2034176     -        [16, 256, 32, 32]    float32 
model.dec.3_block3    2034176     -        [16, 256, 32, 32]    float32 
model.dec.3_block4    2034176     -        [16, 256, 32, 32]    float32 
model.dec.2_up        1378304     8        [16, 256, 64, 64]    float32 
model.dec.2_block0    9898496     -        [16, 256, 64, 64]    float32 
model.dec.2_block1    9898496     -        [16, 256, 64, 64]    float32 
model.dec.2_block2    9898496     -        [16, 256, 64, 64]    float32 
model.dec.2_block3    9898496     -        [16, 256, 64, 64]    float32 
model.dec.2_block4    10162176    -        [16, 256, 64, 64]    float32 
model.dec.1_up        6621184     8        [16, 256, 128, 128]  float32 
model.dec.1_block0    9898496     -        [16, 256, 128, 128]  float32 
model.dec.1_block1    9898496     -        [16, 256, 128, 128]  float32 
model.dec.1_block2    9898496     -        [16, 256, 128, 128]  float32 
model.dec.1_block3    9898496     -        [16, 256, 128, 128]  float32 
model.dec.1_block4    8259840     -        [16, 256, 128, 128]  float32 
model.dec.0_up        6621184     8        [16, 256, 256, 256]  float32 
model.dec.0_block0    10143232    -        [16, 128, 256, 256]  float32 
model.dec.0_block1    7619840     -        [16, 128, 256, 256]  float32 
model.dec.0_block2    7619840     -        [16, 128, 256, 256]  float32 
model.dec.0_block3    7619840     -        [16, 128, 256, 256]  float32 
model.dec.0_block4    7619840     -        [16, 128, 256, 256]  float32 
model.dec.0_aux_norm  256         -        [16, 128, 256, 256]  float32 
model.dec.0_aux_conv  58755       -        [16, 3, 256, 256]    float32 
model                 1152        -        [16, 3, 256, 256]    float32 
<top-level>           -           -        [16, 3, 256, 256]    float32 
---                   ---         ---      ---                  ---     
Total                 253543427   48       -                    -       

Setting up optimizer...
Training for 200000 kimg...

Traceback (most recent call last):
  File "/mnt/nvme/home/alex/repos/diffusion/edm/train.py", line 250, in <module>
    main()
  File "/mnt/nvme/home/alex/.envs/diffusion/lib/python3.9/site-packages/click/core.py", line 1130, in __call__
    return self.main(*args, **kwargs)
  File "/mnt/nvme/home/alex/.envs/diffusion/lib/python3.9/site-packages/click/core.py", line 1055, in main
    rv = self.invoke(ctx)
  File "/mnt/nvme/home/alex/.envs/diffusion/lib/python3.9/site-packages/click/core.py", line 1404, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/mnt/nvme/home/alex/.envs/diffusion/lib/python3.9/site-packages/click/core.py", line 760, in invoke
    return __callback(*args, **kwargs)
  File "/mnt/nvme/home/alex/repos/diffusion/edm/train.py", line 245, in main
    training_loop.training_loop(**c)
  File "/mnt/nvme/home/alex/repos/diffusion/edm/training/training_loop.py", line 129, in training_loop
    loss = loss_fn(net=ddp, images=images, labels=labels, augment_pipe=augment_pipe)
  File "/mnt/nvme/home/alex/repos/diffusion/edm/training/loss.py", line 79, in __call__
    D_yn = net(y + n, sigma, labels, augment_labels=augment_labels)
  File "/mnt/nvme/home/alex/.envs/diffusion/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/mnt/nvme/home/alex/.envs/diffusion/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1040, in forward
    output = self._run_ddp_forward(*inputs, **kwargs)
  File "/mnt/nvme/home/alex/.envs/diffusion/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1000, in _run_ddp_forward
    return module_to_run(*inputs[0], **kwargs[0])
  File "/mnt/nvme/home/alex/.envs/diffusion/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/mnt/nvme/home/alex/repos/diffusion/edm/training/networks.py", line 549, in forward
    F_x = self.model((c_in * x).to(dtype), c_noise.flatten(), class_labels=class_labels, **model_kwargs)
  File "/mnt/nvme/home/alex/.envs/diffusion/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/mnt/nvme/home/alex/repos/diffusion/edm/training/networks.py", line 506, in forward
    x = block(x, emb)
  File "/mnt/nvme/home/alex/.envs/diffusion/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/mnt/nvme/home/alex/repos/diffusion/edm/training/networks.py", line 300, in forward
    x = self.conv0(silu(self.norm0(x)))
  File "/mnt/nvme/home/alex/.envs/diffusion/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/mnt/nvme/home/alex/repos/diffusion/edm/training/networks.py", line 207, in forward
    spectral_out = self.spectral_conv(x) if self.use_spectral else 0
  File "/mnt/nvme/home/alex/.envs/diffusion/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/mnt/nvme/home/alex/repos/diffusion/edm/training/networks.py", line 166, in forward
    x_ft = torch.fft.rfft2(x)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 1.01 GiB (GPU 0; 79.21 GiB total capacity; 76.76 GiB already allocated; 35.56 MiB free; 77.15 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
